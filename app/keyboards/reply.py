from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from datetime import datetime, timedelta

def get_main_menu_unregistered() -> ReplyKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –Ω–µ–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."""
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üöÄ –°–æ–∑–¥–∞—Ç—å –≥—Ä—É–ø–ø—É")],
            [KeyboardButton(text="üîó –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –ø–æ —Å—Å—ã–ª–∫–µ")]
        ],
        resize_keyboard=True
    )

def get_main_menu_leader() -> ReplyKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Å—Ç–∞—Ä–æ—Å—Ç—ã –≥—Ä—É–ø–ø—ã."""
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üìÖ –°–æ–±—ã—Ç–∏—è –∏ –ë—Ä–æ–Ω—å")],
            [KeyboardButton(text="üë• –£—á–∞—Å—Ç–Ω–∏–∫–∏ –≥—Ä—É–ø–ø—ã")],
            [KeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≥—Ä—É–ø–ø—ã")],
            [KeyboardButton(text="‚ûï –°–æ–∑–¥–∞—Ç—å —Å–æ–±—ã—Ç–∏–µ")],
            [KeyboardButton(text="üìÖ –ü–æ–∫–∞–∑–∞—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å")],
            [KeyboardButton(text="üìÖ –ü–æ–∫–∞–∑–∞—Ç—å –Ω–µ–¥–µ–ª—å–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å")],
            [KeyboardButton(text="üîó –°–æ–∑–¥–∞—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ")]
        ],
        resize_keyboard=True
    )

def get_assistant_menu() -> ReplyKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –≥—Ä—É–ø–ø—ã."""
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üìÖ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è–º–∏")],
            [KeyboardButton(text="üìÖ –ü–æ–∫–∞–∑–∞—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å")],
            [KeyboardButton(text="üìÖ –ü–æ–∫–∞–∑–∞—Ç—å –Ω–µ–¥–µ–ª—å–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å")]
        ],
        resize_keyboard=True
    )

def get_regular_member_menu() -> ReplyKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –æ–±—ã—á–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≥—Ä—É–ø–ø—ã."""
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üë• –£—á–∞—Å—Ç–Ω–∏–∫–∏ –≥—Ä—É–ø–ø—ã")],
            [KeyboardButton(text="üìÖ –ü–æ–∫–∞–∑–∞—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å")],
            [KeyboardButton(text="üìÖ –ü–æ–∫–∞–∑–∞—Ç—å –Ω–µ–¥–µ–ª—å–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å")]
        ],
        resize_keyboard=True
    )

def get_calendar_keyboard(events) -> InlineKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–º —Å–æ–±—ã—Ç–∏–π –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –º–µ—Å—è—Ü–∞."""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[])
    current_month = datetime.now().month
    current_year = datetime.now().year

    if not events:
        keyboard.inline_keyboard.append([InlineKeyboardButton(text="–ù–µ—Ç —Å–æ–±—ã—Ç–∏–π", callback_data="none")])
    else:
        for event in events:
            if event.date.month == current_month and event.date.year == current_year:
                button_text = f"{event.date.day} - {event.title} {'[–í]' if event.is_important else ''}"
                keyboard.inline_keyboard.append([InlineKeyboardButton(text=button_text, callback_data=f"event_{event.id}")])

    keyboard.inline_keyboard.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")])
    return keyboard

def get_weekly_calendar_keyboard(events, start_of_week: datetime.date) -> InlineKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–º —Å–æ–±—ã—Ç–∏–π –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–π –Ω–µ–¥–µ–ª–∏."""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[])
    end_of_week = start_of_week + timedelta(days=6)

    # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Å–æ–±—ã—Ç–∏–π –∑–∞ –Ω–µ–¥–µ–ª—é
    week_events = [e for e in events if start_of_week <= e.date <= end_of_week]
    if not week_events:
        keyboard.inline_keyboard.append([InlineKeyboardButton(text="–ù–µ—Ç —Å–æ–±—ã—Ç–∏–π –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ", callback_data="none")])
    else:
        for event in sorted(week_events, key=lambda e: e.date):
            button_text = f"{event.date.strftime('%a, %d %b')} - {event.title} {'[–í]' if event.is_important else ''}"
            keyboard.inline_keyboard.append([InlineKeyboardButton(text=button_text, callback_data=f"event_{event.id}")])

    # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –Ω–µ–¥–µ–ª—è–º
    keyboard.inline_keyboard.append([
        InlineKeyboardButton(text="‚¨ÖÔ∏è –ü—Ä–µ–¥. –Ω–µ–¥–µ–ª—è", callback_data=f"week_{-1}"),
        InlineKeyboardButton(text="–¢–µ–∫—É—â–∞—è –Ω–µ–¥–µ–ª—è", callback_data="week_0"),
        InlineKeyboardButton(text="–°–ª–µ–¥. –Ω–µ–¥–µ–ª—è ‚û°Ô∏è", callback_data="week_1")
    ])
    return keyboard

def get_weekly_calendar_back_button() -> InlineKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –Ω–µ–¥–µ–ª—å–Ω–æ–º—É –∫–∞–ª–µ–Ω–¥–∞—Ä—é."""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –∫–∞–ª–µ–Ω–¥–∞—Ä—é", callback_data="week_back")]
    ])